#!/usr/bin/python
# -*- coding: utf-8 -*-

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt
import sys
import os
from euca2ools import Euca2ool, Util, ConnectionFailed

usage_string = \
    """
Modify attributes for an image.

euca-modify-image-attribute [-l, --launch-permission] [-p, --product-code] 
[-a, --add entity ] [-r, --remove entity]
[-h, --help] [--version] [--debug] image_id 

REQUIRED PARAMETERS
	
image_id			Unique identifier for the image that you want to modify the attributes for.

OPTIONAL PARAMETERS

-l, --launch-permission 	Launch permissions.

-p, --product-code		Product codes associated with the image.

-a, -add			Entity (typically, user id) to add.

-r, --remove			Entity (typically, user id) to remove.
"""


def usage(status=1):
    print usage_string
    Util().usage(compat=True)


def version():
    print Util().version()
    sys.exit(status)


def main():
    euca = None
    try:
        euca = Euca2ool('lp:a:r:', ['launch-permission', 'product-code='
                        , 'add=', 'remove='], compat=True)
    except Exception, e:
        print e
        usage()

    image_id = None
    code = None
    entity = None
    image_attribute = None
    operation_type = None
    user_ids = None
    groups = None
    product_codes = []

    for (name, value) in euca.opts:
        if name in ('-p', '--product-code'):
            if not image_attribute:
                image_attribute = 'productCodes'
            product_codes.append(value)
        elif name in ('-l', '--launch-permission'):
            if not image_attribute:
                image_attribute = 'launchPermission'
        elif name in ('-a', '--add'):
            entity = value
            operation_type = 'add'
        elif name in ('-r', '--remove'):
            entity = value
            operation_type = 'remove'
        elif name in ('-h', '--help'):
            usage(0)
        elif name == '--version':
            version()

    for arg in euca.args:
        image_id = arg
        break

    if image_attribute == 'launchPermission':
        if entity == 'all':
            groups = [entity]
        else:
            user_ids = [entity]

    if image_id and image_attribute:
        try:
            euca_conn = euca.make_connection()
        except ConnectionFailed, e:
            print e.message
            sys.exit(1)
        try:
            return_code = euca_conn.modify_image_attribute(
                image_id=image_id,
                attribute=image_attribute,
                operation=operation_type,
                user_ids=user_ids,
                groups=groups,
                product_codes=product_codes,
                )
        except Exception, ex:
            euca.display_error_and_exit('%s' % ex)

        if return_code:
            print 'IMAGE\t%s' % image_id
    else:
        if not image_id:
            print 'image_id must be specified'
        if not image_attribute:
            print '-l or -p must be specified'
        usage()


if __name__ == '__main__':
    main()

