#!/usr/bin/python
# -*- coding: utf-8 -*-

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import getopt
import sys
import os
from euca2ools import Euca2ool, VolumeValidationError, \
    InstanceValidationError, Util, ConnectionFailed

usage_string = \
    """
Attaches a volume to an instance.

euca-attach-volume -i, --instance instance_id -d, --device device 
[-h, --help] [--version] [--debug] volume_id 

REQUIRED PARAMETERS

-i, --instance 			unique id of a running instance to attach the volume to.

-d, --device			local device name (inside the guest VM) to use.

volume_id			unique id for a volume to attach.

OPTIONAL PARAMETERS

"""


def usage(status=1):
    print usage_string
    Util().usage()
    sys.exit(status)


def version():
    print Util().version()
    sys.exit()


def main():
    euca = None
    try:
        euca = Euca2ool('i:d:', ['instance=', 'device='])
    except Exception, e:
        print e
        usage()

    volume_id = None
    instance_id = None
    device = None

    for (name, value) in euca.opts:
        if name in ('-i', '--instance'):
            instance_id = value
        elif name in ('-d', '--device'):
            device = value
        elif name in ('-h', '--help'):
            usage(0)
        elif name == '--version':
            version()

    try:
        euca_conn = euca.make_connection()
    except ConnectionFailed, e:
        print e.message
        sys.exit(1)

    for arg in euca.args:
        volume_id = arg
        break

    if volume_id and instance_id and device:
        try:
            euca.validate_volume_id(volume_id)
        except VolumeValidationError:
            print 'Invalid volume id'
            sys.exit(1)
        try:
            euca.validate_instance_id(instance_id)
        except InstanceValidationError:
            print 'Invalid instance id'
            sys.exit(1)

        try:
            return_code = euca_conn.attach_volume(volume_id=volume_id,
                    instance_id=instance_id, device=device)
        except Exception, ex:
            euca.display_error_and_exit('%s' % ex)

        if return_code:
            print 'VOLUME\t%s' % volume_id
    else:
        if not volume_id:
            print 'volume_id must be specified'
        if not instance_id:
            print 'instance_id must be specified'
        if not device:
            print 'device must be specified'
        usage()


if __name__ == '__main__':
    main()

