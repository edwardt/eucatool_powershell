#!/usr/bin/python
# -*- coding: utf-8 -*-

# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com

import sys
from euca2ools import Euca2ool, Util, ConnectionFailed

usage_string = \
    """
Retrieves previously submitted bundle tasks.

euca-describe-bundle-tasks [bundle_id1... bundle_idN] [-h, --help] [--version] [--debug]

REQUIRED PARAMETERS

bundle_id1... bundle_idN	Identifiers of bundle tasks to describe. If no bundle task ids are specified
all bundle tasks are returned.

OPTIONAL PARAMETERS

"""


def usage(status=1):
    print usage_string
    Util().usage()
    sys.exit(status)


def version():
    print Util().version()
    sys.exit()


def display_bundles(bundles):
    for bundle in bundles:
        bundle_string = '%s\t%s\t%s\t%s\t%s\t%s\t%s' % (
            bundle.id,
            bundle.instance_id,
            bundle.bucket,
            bundle.prefix,
            bundle.state,
            bundle.start_time,
            bundle.update_time,
            )
        print 'BUNDLE\t%s' % bundle_string


def main():
    euca = None
    try:
        euca = Euca2ool()
    except Exception, e:
        print e
        usage()

    for (name, value) in euca.opts:
        if name in ('-h', '--help'):
            usage(0)
        elif name == '--version':
            version()

    bundle_ids = euca.process_args()
    try:
        for id in bundle_ids:
            euca.validate_bundle_id(id)
    except:
        print 'Invalid bundle id'
        sys.exit(1)

    try:
        euca_conn = euca.make_connection()
    except ConnectionFailed, e:
        print e.message
        sys.exit(1)
    try:
        bundles = euca_conn.get_all_bundle_tasks(bundle_ids=bundle_ids)
    except Exception, ex:
        euca.display_error_and_exit('%s' % ex)

    if bundles:
        display_bundles(bundles)


if __name__ == '__main__':
    main()

